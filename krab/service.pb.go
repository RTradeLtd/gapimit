// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package krab

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type KeyGet struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyGet) Reset()         { *m = KeyGet{} }
func (m *KeyGet) String() string { return proto.CompactTextString(m) }
func (*KeyGet) ProtoMessage()    {}
func (*KeyGet) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *KeyGet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyGet.Unmarshal(m, b)
}
func (m *KeyGet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyGet.Marshal(b, m, deterministic)
}
func (m *KeyGet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyGet.Merge(m, src)
}
func (m *KeyGet) XXX_Size() int {
	return xxx_messageInfo_KeyGet.Size(m)
}
func (m *KeyGet) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyGet.DiscardUnknown(m)
}

var xxx_messageInfo_KeyGet proto.InternalMessageInfo

func (m *KeyGet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type KeyPut struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,2,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyPut) Reset()         { *m = KeyPut{} }
func (m *KeyPut) String() string { return proto.CompactTextString(m) }
func (*KeyPut) ProtoMessage()    {}
func (*KeyPut) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *KeyPut) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyPut.Unmarshal(m, b)
}
func (m *KeyPut) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyPut.Marshal(b, m, deterministic)
}
func (m *KeyPut) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyPut.Merge(m, src)
}
func (m *KeyPut) XXX_Size() int {
	return xxx_messageInfo_KeyPut.Size(m)
}
func (m *KeyPut) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyPut.DiscardUnknown(m)
}

var xxx_messageInfo_KeyPut proto.InternalMessageInfo

func (m *KeyPut) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KeyPut) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

type KeyDelete struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyDelete) Reset()         { *m = KeyDelete{} }
func (m *KeyDelete) String() string { return proto.CompactTextString(m) }
func (*KeyDelete) ProtoMessage()    {}
func (*KeyDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *KeyDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyDelete.Unmarshal(m, b)
}
func (m *KeyDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyDelete.Marshal(b, m, deterministic)
}
func (m *KeyDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyDelete.Merge(m, src)
}
func (m *KeyDelete) XXX_Size() int {
	return xxx_messageInfo_KeyDelete.Size(m)
}
func (m *KeyDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyDelete.DiscardUnknown(m)
}

var xxx_messageInfo_KeyDelete proto.InternalMessageInfo

func (m *KeyDelete) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type KeyList struct {
	Limit                int64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyList) Reset()         { *m = KeyList{} }
func (m *KeyList) String() string { return proto.CompactTextString(m) }
func (*KeyList) ProtoMessage()    {}
func (*KeyList) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *KeyList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyList.Unmarshal(m, b)
}
func (m *KeyList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyList.Marshal(b, m, deterministic)
}
func (m *KeyList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyList.Merge(m, src)
}
func (m *KeyList) XXX_Size() int {
	return xxx_messageInfo_KeyList.Size(m)
}
func (m *KeyList) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyList.DiscardUnknown(m)
}

var xxx_messageInfo_KeyList proto.InternalMessageInfo

func (m *KeyList) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Response struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,2,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	KeyIDs               []string `protobuf:"bytes,3,rep,name=keyIDs,proto3" json:"keyIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Response) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *Response) GetKeyIDs() []string {
	if m != nil {
		return m.KeyIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "krab.Empty")
	proto.RegisterType((*KeyGet)(nil), "krab.KeyGet")
	proto.RegisterType((*KeyPut)(nil), "krab.KeyPut")
	proto.RegisterType((*KeyDelete)(nil), "krab.KeyDelete")
	proto.RegisterType((*KeyList)(nil), "krab.KeyList")
	proto.RegisterType((*Response)(nil), "krab.Response")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0xd2, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0x06, 0x70, 0xbb, 0x6e, 0xad, 0x7b, 0xac, 0x4e, 0x82, 0x48, 0x11, 0x71, 0x25, 0xa7, 0x9d,
	0x2a, 0x4c, 0xbc, 0x79, 0x9c, 0x4c, 0xa9, 0x87, 0x52, 0x6f, 0xde, 0x32, 0x79, 0x87, 0xb0, 0x75,
	0x2d, 0xcd, 0xeb, 0x20, 0x7f, 0x81, 0xff, 0xb6, 0xa4, 0x99, 0x5b, 0xc1, 0x80, 0x78, 0xeb, 0xd7,
	0x8f, 0x5f, 0x08, 0x1f, 0x81, 0x48, 0x61, 0xb3, 0x97, 0x9f, 0x98, 0xd6, 0x4d, 0x45, 0x15, 0x1b,
	0x6e, 0x1a, 0xb1, 0xe6, 0x21, 0x8c, 0x9e, 0xcb, 0x9a, 0x34, 0xbf, 0x85, 0x20, 0x43, 0xbd, 0x42,
	0x62, 0x0c, 0x86, 0x3b, 0x51, 0x62, 0xec, 0x25, 0xde, 0x7c, 0x5c, 0x74, 0xdf, 0xfc, 0xa9, 0x6b,
	0xf3, 0xd6, 0xd9, 0xb2, 0x3b, 0x80, 0xba, 0x91, 0x7b, 0x41, 0x98, 0xa1, 0x8e, 0x07, 0x89, 0x37,
	0x9f, 0x14, 0xbd, 0x3f, 0x7c, 0x06, 0xe3, 0x0c, 0xf5, 0x12, 0xb7, 0x48, 0xe8, 0x3c, 0x7e, 0x06,
	0x61, 0x86, 0xfa, 0x4d, 0x2a, 0x62, 0x57, 0x30, 0xda, 0xca, 0x52, 0x52, 0xd7, 0xfb, 0x85, 0x0d,
	0xfc, 0x03, 0xce, 0x0b, 0x54, 0x75, 0xb5, 0x53, 0xc8, 0xae, 0x21, 0x50, 0x24, 0xa8, 0x55, 0x87,
	0x23, 0x0e, 0xe9, 0xaf, 0x5b, 0x18, 0xb7, 0x41, 0xfd, 0xba, 0x54, 0xb1, 0x9f, 0xf8, 0xc6, 0xd9,
	0xb4, 0xf8, 0x1a, 0x40, 0xf8, 0x6e, 0xa7, 0x61, 0xf7, 0x10, 0xbd, 0x08, 0x95, 0x9f, 0xd0, 0x24,
	0x35, 0x33, 0xa5, 0x76, 0x9a, 0x9b, 0x0b, 0x9b, 0x7e, 0xae, 0xc2, 0xcf, 0x0c, 0x58, 0x21, 0xfd,
	0x0f, 0xe4, 0xad, 0x1b, 0xe4, 0xad, 0x0b, 0x3c, 0xc2, 0xa5, 0x5d, 0xae, 0x67, 0xa6, 0x47, 0x63,
	0x2b, 0x07, 0x5b, 0xc0, 0xd4, 0xec, 0x79, 0x42, 0x8a, 0x45, 0x47, 0x65, 0x9a, 0xdf, 0x66, 0x1d,
	0x74, 0x2f, 0xe3, 0xe1, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x26, 0x3f, 0x6c, 0x0a, 0x2a, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	HasPrivateKey(ctx context.Context, in *KeyGet, opts ...grpc.CallOption) (*Response, error)
	GetPrivateKey(ctx context.Context, in *KeyGet, opts ...grpc.CallOption) (*Response, error)
	PutPrivateKey(ctx context.Context, in *KeyPut, opts ...grpc.CallOption) (*Response, error)
	DeletePrivateKey(ctx context.Context, in *KeyDelete, opts ...grpc.CallOption) (*Response, error)
	ListPrivateKeys(ctx context.Context, in *KeyList, opts ...grpc.CallOption) (*Response, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) HasPrivateKey(ctx context.Context, in *KeyGet, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/krab.Service/HasPrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetPrivateKey(ctx context.Context, in *KeyGet, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/krab.Service/GetPrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) PutPrivateKey(ctx context.Context, in *KeyPut, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/krab.Service/PutPrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) DeletePrivateKey(ctx context.Context, in *KeyDelete, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/krab.Service/DeletePrivateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ListPrivateKeys(ctx context.Context, in *KeyList, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/krab.Service/ListPrivateKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	HasPrivateKey(context.Context, *KeyGet) (*Response, error)
	GetPrivateKey(context.Context, *KeyGet) (*Response, error)
	PutPrivateKey(context.Context, *KeyPut) (*Response, error)
	DeletePrivateKey(context.Context, *KeyDelete) (*Response, error)
	ListPrivateKeys(context.Context, *KeyList) (*Response, error)
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) HasPrivateKey(ctx context.Context, req *KeyGet) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HasPrivateKey not implemented")
}
func (*UnimplementedServiceServer) GetPrivateKey(ctx context.Context, req *KeyGet) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrivateKey not implemented")
}
func (*UnimplementedServiceServer) PutPrivateKey(ctx context.Context, req *KeyPut) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutPrivateKey not implemented")
}
func (*UnimplementedServiceServer) DeletePrivateKey(ctx context.Context, req *KeyDelete) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePrivateKey not implemented")
}
func (*UnimplementedServiceServer) ListPrivateKeys(ctx context.Context, req *KeyList) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPrivateKeys not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_HasPrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).HasPrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/krab.Service/HasPrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).HasPrivateKey(ctx, req.(*KeyGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetPrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetPrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/krab.Service/GetPrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetPrivateKey(ctx, req.(*KeyGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_PutPrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyPut)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).PutPrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/krab.Service/PutPrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).PutPrivateKey(ctx, req.(*KeyPut))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_DeletePrivateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyDelete)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).DeletePrivateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/krab.Service/DeletePrivateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).DeletePrivateKey(ctx, req.(*KeyDelete))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_ListPrivateKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).ListPrivateKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/krab.Service/ListPrivateKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).ListPrivateKeys(ctx, req.(*KeyList))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "krab.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HasPrivateKey",
			Handler:    _Service_HasPrivateKey_Handler,
		},
		{
			MethodName: "GetPrivateKey",
			Handler:    _Service_GetPrivateKey_Handler,
		},
		{
			MethodName: "PutPrivateKey",
			Handler:    _Service_PutPrivateKey_Handler,
		},
		{
			MethodName: "DeletePrivateKey",
			Handler:    _Service_DeletePrivateKey_Handler,
		},
		{
			MethodName: "ListPrivateKeys",
			Handler:    _Service_ListPrivateKeys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
